<Page
    x:Class="SmartUSKit_CS.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:controls="clr-namespace:SmartUSKit_CS.Controls" xmlns:converters="clr-namespace:SmartUSKit_CS.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:SmartUSKit_CS" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:props="clr-namespace:SmartUSKit_CS.Properties" xmlns:res="clr-namespace:SmartUSKit_CS.Properties" xmlns:shadereffectlibrary="clr-namespace:ShaderEffectLibrary;assembly=ShaderEffectLibrary"
    Title="WirelessUSG" d:DesignHeight="900" d:DesignWidth="1300"
    Loaded="OnLoaded" SizeChanged="Window_SizeChanged" Unloaded="Window_Closed"
    mc:Ignorable="d">
    <Page.Resources>
        <DropShadowEffect
            x:Key="DropShadowEffect" BlurRadius="20" Direction="0"
            Opacity="0.99" ShadowDepth="0" Color="White" />
        <Style x:Key="SaveImageStyle" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Effect" Value="{StaticResource DropShadowEffect}" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <SolidColorBrush x:Key="ThemeForegroundColor" Color="#FF4BCFDA" />
        <converters:RectConverter x:Key="rectConverter" />
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Storyboard x:Key="roundanimation">
            <ColorAnimation
                AutoReverse="True" BeginTime="00:00:00" RepeatBehavior="1"
                Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)" From="Lime"
                To="Red" Duration="00:00:0.8" />
        </Storyboard>
        <Style x:Key="ButtonSubQuarterCircleBRStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource ThemeForegroundColor}" />
            <Setter Property="FontSize" Value="21" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Path
                                Name="mypath" Data="M49.493671,0.5 L99.5,0.5 99.5,79.5 C99.5,90.545695 90.545695,99.5 79.5,99.5 L20.5,99.5 0.5,99.5 0.5,49.493671 1.2776173,49.483833 C27.600678,48.816933 48.816933,27.600678 49.483833,1.2776173 z"
                                Fill="{StaticResource ThemeBackgroundColor}"
                                Stretch="Fill" Stroke="Transparent" />
                            <Path
                                Name="mypathAnimation" Data="M49.493671,0.5 L99.5,0.5 99.5,79.5 C99.5,90.545695 90.545695,99.5 79.5,99.5 L20.5,99.5 0.5,99.5 0.5,49.493671 1.2776173,49.483833 C27.600678,48.816933 48.816933,27.600678 49.483833,1.2776173 z"
                                Fill="{StaticResource ThemeBackgroundColor}"
                                Stretch="Fill" Stroke="Transparent" Visibility="Hidden" />
                            <ContentPresenter
                                x:Name="contentPresenter" Margin="0,12,0,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault" Value="False">
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="0" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter TargetName="mypath" Property="Stroke" Value="white" />
                                <!--<Setter Property="Stroke" TargetName="mypathAnimation" Value="white"/>-->
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="4" />
                                <Setter Property="FontSize" Value="22" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="mypath" Property="Fill" Value="#ff262626" />
                                <Setter TargetName="mypath" Property="Stroke" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#ffb6b6b6" />
                                <!--<Setter Property="Fill" TargetName="mypath" Value="#FF8DA7AE"/>
                                <Setter Property="Stroke" TargetName="mypath" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>

                            <!--  激活状态  -->
                            <Trigger Property="Tag" Value="run">
                                <Setter TargetName="mypathAnimation" Property="Visibility" Value="Visible" />
                                <Setter TargetName="mypathAnimation" Property="StrokeThickness" Value="3" />
                                <Setter TargetName="mypathAnimation" Property="Stroke" Value="lime" />
                                <!--<Trigger.EnterActions>
                                    <BeginStoryboard >
                                        <Storyboard >
                                            <ColorAnimation Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"  Storyboard.TargetName="mypathAnimation"
                                             BeginTime="00:00:00" From="Lime" To="Red"
                                             Duration="00:00:0.8" AutoReverse="True" RepeatBehavior="1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                </Trigger.ExitActions>-->
                            </Trigger>
                            <!--  非激活状态  -->
                            <!--<Trigger Property="IsEnabled" Value="false">-->
                            <Trigger Property="Tag" Value="stop">
                                <Setter TargetName="mypathAnimation" Property="Visibility" Value="Hidden" />
                                <!--<PauseStoryboard BeginStoryboardName="OpacityStoryboard" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonSubQuarterCircleTLStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource ThemeForegroundColor}" />
            <Setter Property="FontSize" Value="21" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Path
                                Name="mypath" Data="M00.5,20.5 C0.5,9.454305 9.454305,0.5 20.5,0.5  L99.5,0.5 99.5,50.506329 98.722382,50.516167 C72.399323,51.183067 51.183067,72.399323 50.516167,98.722382 L50.506329,99.5 0.5,99.5 z"
                                Fill="{StaticResource ThemeBackgroundColor}"
                                Stretch="Fill" Stroke="Transparent" />
                            <Path
                                Name="mypathAnimation" Data="M00.5,20.5 C0.5,9.454305 9.454305,0.5 20.5,0.5  L99.5,0.5 99.5,50.506329 98.722382,50.516167 C72.399323,51.183067 51.183067,72.399323 50.516167,98.722382 L50.506329,99.5 0.5,99.5 z"
                                Fill="{StaticResource ThemeBackgroundColor}"
                                Stretch="Fill" Stroke="Transparent" Visibility="Hidden" />
                            <ContentPresenter
                                x:Name="contentPresenter" Margin="0,0,0,12"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault" Value="False">
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="0" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter TargetName="mypath" Property="Stroke" Value="white" />
                                <!--<Setter Property="Stroke" TargetName="mypathAnimation" Value="white"/>-->
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="4" />
                                <Setter Property="FontSize" Value="22" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="mypath" Property="Fill" Value="#ff262626" />
                                <Setter TargetName="mypath" Property="Stroke" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#ffb6b6b6" />
                                <!--<Setter Property="Fill" TargetName="mypath" Value="#FF8DA7AE"/>
                                <Setter Property="Stroke" TargetName="mypath" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>

                            <!--  激活状态  -->
                            <Trigger Property="Tag" Value="run">
                                <Setter TargetName="mypathAnimation" Property="Visibility" Value="Visible" />
                                <Setter TargetName="mypathAnimation" Property="StrokeThickness" Value="3" />
                                <Setter TargetName="mypathAnimation" Property="Stroke" Value="Lime" />
                                <!--<Trigger.EnterActions>
                                    <BeginStoryboard >
                                        <Storyboard >
                                            <ColorAnimation Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"  Storyboard.TargetName="mypathAnimation"
                                             BeginTime="00:00:00" From="Lime" To="Red"
                                             Duration="00:00:0.8" AutoReverse="True" RepeatBehavior="1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                </Trigger.ExitActions>-->
                            </Trigger>
                            <!--  非激活状态  -->
                            <!--<Trigger Property="IsEnabled" Value="false">-->
                            <Trigger Property="Tag" Value="stop">
                                <Setter TargetName="mypathAnimation" Property="Visibility" Value="Hidden" />
                                <!--<PauseStoryboard BeginStoryboardName="OpacityStoryboard" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonSubQuarterCircleTRStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource ThemeForegroundColor}" />
            <Setter Property="FontSize" Value="21" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Path
                                Name="mypath" Data="M0.5,0.5 L79.5,0.5 C90.545695,0.5 99.5,9.454305 99.5,20.5 L99.5,79.5 99.5,99.5 49.493671,99.5 49.483833,98.722382 C48.816933,72.399323 27.600678,51.183067 1.2776173,50.516167 L0.5,50.506329 z"
                                Fill="{StaticResource ThemeBackgroundColor}"
                                Stretch="Fill" Stroke="Transparent" />
                            <Path
                                Name="mypathAnimation" Data="M0.5,0.5 L79.5,0.5 C90.545695,0.5 99.5,9.454305 99.5,20.5 L99.5,79.5 99.5,99.5 49.493671,99.5 49.483833,98.722382 C48.816933,72.399323 27.600678,51.183067 1.2776173,50.516167 L0.5,50.506329 z"
                                Fill="{StaticResource ThemeBackgroundColor}"
                                Stretch="Fill" Stroke="Transparent" Visibility="Hidden" />
                            <ContentPresenter
                                x:Name="contentPresenter" Margin="0,0,0,12"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault" Value="False">
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="0" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter TargetName="mypath" Property="Stroke" Value="white" />
                                <!--<Setter Property="Stroke" TargetName="mypathAnimation" Value="white"/>-->
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="4" />
                                <Setter Property="FontSize" Value="22" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="mypath" Property="Fill" Value="#ff262626" />
                                <Setter TargetName="mypath" Property="Stroke" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#ffb6b6b6" />
                                <!--<Setter Property="Fill" TargetName="mypath" Value="#FF8DA7AE"/>
                                <Setter Property="Stroke" TargetName="mypath" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>

                            <!--  激活状态  -->
                            <Trigger Property="Tag" Value="run">
                                <Setter TargetName="mypathAnimation" Property="Visibility" Value="Visible" />
                                <Setter TargetName="mypathAnimation" Property="StrokeThickness" Value="3" />
                                <Setter TargetName="mypathAnimation" Property="Stroke" Value="lime" />
                                <!--<Trigger.EnterActions>
                                    <BeginStoryboard >
                                        <Storyboard >
                                            <ColorAnimation Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"  Storyboard.TargetName="mypathAnimation"
                                             BeginTime="00:00:00" From="Lime" To="Red"
                                             Duration="00:00:0.8" AutoReverse="True" RepeatBehavior="1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                </Trigger.ExitActions>-->
                            </Trigger>
                            <!--  非激活状态  -->
                            <!--<Trigger Property="IsEnabled" Value="false">-->
                            <Trigger Property="Tag" Value="stop">
                                <Setter TargetName="mypathAnimation" Property="Visibility" Value="Hidden" />
                                <!--<PauseStoryboard BeginStoryboardName="OpacityStoryboard" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonSubQuarterCircleBLStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource ThemeForegroundColor}" />
            <Setter Property="FontSize" Value="21" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Path
                                Name="mypath" Data="M0.5,0.5 L50.506329,0.5 50.516167,1.2776173 C51.183067,27.600678 72.399323,48.816933 98.722382,49.483833 L99.5,49.493671 99.5,99.5 20.5,99.5 C9.454305,99.5 0.5,90.545695 0.5,79.5  z"
                                Fill="{StaticResource ThemeBackgroundColor}"
                                Stretch="Fill" Stroke="Transparent" />
                            <Path
                                Name="mypathAnimation" Data="M0.5,0.5 L50.506329,0.5 50.516167,1.2776173 C51.183067,27.600678 72.399323,48.816933 98.722382,49.483833 L99.5,49.493671 99.5,99.5 20.5,99.5 C9.454305,99.5 0.5,90.545695 0.5,79.5 z"
                                Fill="{StaticResource ThemeBackgroundColor}"
                                Stretch="Fill" Stroke="Transparent" Visibility="Hidden" />
                            <ContentPresenter
                                x:Name="contentPresenter" Margin="0,12,0,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault" Value="False">
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="0" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter TargetName="mypath" Property="Stroke" Value="white" />
                                <!--<Setter Property="Stroke" TargetName="mypathAnimation" Value="white"/>-->
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="mypath" Property="StrokeThickness" Value="4" />
                                <Setter Property="FontSize" Value="22" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="mypath" Property="Fill" Value="#ff262626" />
                                <Setter TargetName="mypath" Property="Stroke" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#ffb6b6b6" />
                                <!--<Setter Property="Fill" TargetName="mypath" Value="#FF8DA7AE"/>
                                <Setter Property="Stroke" TargetName="mypath" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>

                            <!--  激活状态  -->
                            <Trigger Property="Tag" Value="run">
                                <Setter TargetName="mypathAnimation" Property="Visibility" Value="Visible" />
                                <Setter TargetName="mypathAnimation" Property="StrokeThickness" Value="3" />
                                <Setter TargetName="mypathAnimation" Property="Stroke" Value="Lime" />
                                <!--<Trigger.EnterActions>
                                    <BeginStoryboard >
                                        <Storyboard >
                                            <ColorAnimation Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"  Storyboard.TargetName="mypathAnimation"
                                             BeginTime="00:00:00" From="Lime" To="Red"
                                             Duration="00:00:0.8" AutoReverse="True" RepeatBehavior="1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                </Trigger.ExitActions>-->
                            </Trigger>
                            <!--  非激活状态  -->
                            <!--<Trigger Property="IsEnabled" Value="false">-->
                            <Trigger Property="Tag" Value="stop">
                                <Setter TargetName="mypathAnimation" Property="Visibility" Value="Hidden" />
                                <!--<PauseStoryboard BeginStoryboardName="OpacityStoryboard" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonRoundStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource ThemeForegroundColor}" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FontSize" Value="21" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="ellipse" Fill="{StaticResource ThemeBackgroundColor}" Stroke="Transparent" />
                            <Ellipse
                                x:Name="ellipseAnimation"
                                Fill="{StaticResource ThemeBackgroundColor}"
                                Stroke="Transparent" Visibility="Hidden" />
                            <ContentPresenter
                                Name="contentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault" Value="False">
                                <Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource Button.Disabled.Border}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter TargetName="ellipse" Property="Stroke" Value="white" />
                                <!--<Setter Property="Stroke" TargetName="mypathAnimation" Value="white"/>-->
                                <Setter TargetName="ellipse" Property="StrokeThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ellipse" Property="StrokeThickness" Value="4" />
                                <Setter Property="FontSize" Value="22" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="ellipse" Property="Fill" Value="#ff262626" />
                                <Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#ffb6b6b6" />
                                <!--<Setter Property="Effect" Value="{StaticResource  monochrome}"/>-->
                            </Trigger>

                            <!--  激活状态  -->
                            <Trigger Property="Tag" Value="run">
                                <Setter TargetName="ellipseAnimation" Property="Visibility" Value="Visible" />
                                <Setter TargetName="ellipseAnimation" Property="StrokeThickness" Value="3" />
                                <Setter TargetName="ellipseAnimation" Property="Stroke" Value="Lime" />
                                <!--<Trigger.EnterActions>
                                    <BeginStoryboard >
                                        <Storyboard >
                                            <ColorAnimation Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"  Storyboard.TargetName="ellipseAnimation"
                                             BeginTime="00:00:00" From="Lime" To="Red"
                                             Duration="00:00:0.8" AutoReverse="True" RepeatBehavior="1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                </Trigger.ExitActions>-->
                            </Trigger>
                            <!--  非激活状态  -->
                            <!--<Trigger Property="IsEnabled" Value="false">-->
                            <Trigger Property="Tag" Value="stop">
                                <Setter TargetName="ellipseAnimation" Property="Visibility" Value="Hidden" />
                                <!--<PauseStoryboard BeginStoryboardName="OpacityStoryboard" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="listboxButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle Name="rect" Fill="Transparent" />
                            <ContentPresenter
                                Margin="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter TargetName="rect" Property="Stroke" Value="Lime" />
                                <!--<Setter Property="Stroke" TargetName="mypathAnimation" Value="white"/>-->
                                <Setter TargetName="rect" Property="StrokeThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True" />
                            <Trigger Property="IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <shadereffectlibrary:MonochromeEffect x:Key="monochrome" />
        <Style x:Key="MinsizeButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" BorderBrush="White" CornerRadius="0">
                            <Grid Background="Transparent">
                                <ContentPresenter
                                    Margin="{TemplateBinding Margin}"
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Content="{TemplateBinding ContentControl.Content}">
                                    <ContentPresenter.Clip>
                                        <RectangleGeometry RadiusX="0" RadiusY="0">
                                            <RectangleGeometry.Rect>
                                                <MultiBinding Converter="{StaticResource rectConverter}" ConverterParameter="LastFirst">
                                                    <Binding ElementName="border" Path="ActualWidth" />
                                                    <Binding ElementName="border" Path="ActualHeight" />
                                                </MultiBinding>
                                            </RectangleGeometry.Rect>
                                        </RectangleGeometry>
                                    </ContentPresenter.Clip>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="white"/>
                            </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="BorderThickness" TargetName="border" Value="1.5"/>-->
                                <Setter TargetName="border" Property="Background" Value="#FF0B1C87" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Opacity" TargetName="border" Value="0.9"/>-->
                                <!--<Setter Property="BorderThickness" TargetName="border" Value="2.5"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Effect" Value="{StaticResource monochrome}" />
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="Margin" Value=" 1 "/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Effect" Value= "{StaticResource monochrome}" />
                </Trigger>

            </Style.Triggers>-->
        </Style>
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" BorderBrush="White" CornerRadius="0">
                            <Grid Background="Transparent">
                                <ContentPresenter
                                    Margin="{TemplateBinding Margin}"
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Content="{TemplateBinding ContentControl.Content}">
                                    <ContentPresenter.Clip>
                                        <RectangleGeometry RadiusX="0" RadiusY="0">
                                            <RectangleGeometry.Rect>
                                                <MultiBinding Converter="{StaticResource rectConverter}" ConverterParameter="LastFirst">
                                                    <Binding ElementName="border" Path="ActualWidth" />
                                                    <Binding ElementName="border" Path="ActualHeight" />
                                                </MultiBinding>
                                            </RectangleGeometry.Rect>
                                        </RectangleGeometry>
                                    </ContentPresenter.Clip>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="white"/>
                            </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="BorderThickness" TargetName="border" Value="1.5"/>-->
                                <Setter TargetName="border" Property="Background" Value="Red" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Opacity" TargetName="border" Value="0.9"/>-->
                                <!--<Setter Property="BorderThickness" TargetName="border" Value="2.5"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Effect" Value="{StaticResource monochrome}" />
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="Margin" Value=" 1 "/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Effect" Value= "{StaticResource monochrome}" />
                </Trigger>

            </Style.Triggers>-->
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border2" BorderBrush="Black" CornerRadius="4">
                            <Grid Background="Transparent">
                                <Border Name="border" BorderBrush="Black" CornerRadius="4">
                                    <ContentPresenter
                                        Margin="{TemplateBinding Margin}"
                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Content="{TemplateBinding ContentControl.Content}">
                                        <ContentPresenter.Clip>
                                            <RectangleGeometry RadiusX="6" RadiusY="6">
                                                <RectangleGeometry.Rect>
                                                    <MultiBinding Converter="{StaticResource rectConverter}" ConverterParameter="LastFirst">
                                                        <Binding ElementName="border" Path="ActualWidth" />
                                                        <Binding ElementName="border" Path="ActualHeight" />
                                                    </MultiBinding>
                                                </RectangleGeometry.Rect>
                                            </RectangleGeometry>
                                        </ContentPresenter.Clip>
                                    </ContentPresenter>
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="white"/>
                            </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderThickness" Value="1.5" />
                                <Setter TargetName="border" Property="BorderBrush" Value="White" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Opacity" TargetName="border" Value="0.9"/>-->
                                <Setter TargetName="border" Property="BorderThickness" Value="2.5" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Effect" Value="{StaticResource monochrome}" />
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="Margin" Value=" 1 "/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Effect" Value= "{StaticResource monochrome}" />
                </Trigger>

            </Style.Triggers>-->
        </Style>
        <Style x:Key="SonoptekMeasureButton" TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" BorderBrush="White" CornerRadius="4">
                            <Grid>
                                <ContentPresenter
                                    x:Name="contentGrid" HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Content="{TemplateBinding ContentControl.Content}">
                                    <ContentPresenter.Clip>
                                        <RectangleGeometry RadiusX="10" RadiusY="10">
                                            <RectangleGeometry.Rect>
                                                <MultiBinding Converter="{StaticResource rectConverter}" ConverterParameter="LastFirst">
                                                    <Binding ElementName="border" Path="ActualWidth" />
                                                    <Binding ElementName="border" Path="ActualHeight" />
                                                </MultiBinding>
                                            </RectangleGeometry.Rect>
                                        </RectangleGeometry>
                                    </ContentPresenter.Clip>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="white"/>
                            </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderThickness" Value="1.5" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Opacity" TargetName="border" Value="0.9"/>-->
                                <Setter TargetName="border" Property="BorderThickness" Value="2.5" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="contentGrid" Property="Effect" Value="{StaticResource monochrome}" />
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="Margin" Value=" 1 "/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Effect" Value= "{StaticResource monochrome}" />
                </Trigger>

            </Style.Triggers>-->
        </Style>
        <Style x:Key="MyMouseOverButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--  圆角button  -->
        <LinearGradientBrush x:Key="ButtonBorder" StartPoint="1,0.5" EndPoint="0,0.5">
            <GradientStop Offset="0" Color="#278af7" />
            <GradientStop Offset="1" Color="#5dd3aa" />
        </LinearGradientBrush>
        <Style x:Key="MyButton" TargetType="Button">
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="FontWeight" Value="Black" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Red" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Name="border"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="0" CornerRadius="5">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0.0" Color="#454545" />
                                    <GradientStop Offset="0.5" Color="#454545" />
                                    <GradientStop Offset="0.0" Color="#454545" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding ContentControl.Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderThickness" Value="4" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonBorder}" />

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonBorder}" />
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  拖动块的按钮颜色  -->
        <LinearGradientBrush x:Key="MyThumbColor" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Offset="0" Color="#f9fbef" />
            <GradientStop Offset="0.4" Color="#c2c3bb" />

            <GradientStop Offset="0.4" Color="#f2f3e8" />
            <GradientStop Offset="0.47" Color="#f2f3e8" />

            <GradientStop Offset="0.47" Color="#353534" />
            <GradientStop Offset="0.53" Color="#353534" />

            <GradientStop Offset="0.53" Color="#f2f3e8" />
            <GradientStop Offset="0.6" Color="#f2f3e8" />

            <GradientStop Offset="0.6" Color="#c2c3bb" />
            <GradientStop Offset="1.0" Color="#f9fbef" />
        </LinearGradientBrush>
        <!--  进度条左边的颜色  -->
        <LinearGradientBrush x:Key="MySliderLeft" StartPoint="1,0.5" EndPoint="0,0.5">
            <GradientStop Offset="0" Color="#278af7" />
            <GradientStop Offset="1" Color="#5dd3aa" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5" />
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC" />
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA" />
        <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC" />
        <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5" />
        <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9" />
        <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="Transparent" />
        <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                <Path
                    x:Name="grip" VerticalAlignment="Center" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z"
                    Fill="{StaticResource SliderThumb.Static.Background}"
                    SnapsToDevicePixels="True" Stretch="Fill"
                    Stroke="{StaticResource SliderThumb.Static.Border}"
                    StrokeThickness="1" UseLayoutRounding="True" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                <Path
                    x:Name="grip" VerticalAlignment="Center" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z"
                    Fill="{StaticResource SliderThumb.Static.Background}"
                    SnapsToDevicePixels="True" Stretch="Fill"
                    Stroke="{StaticResource SliderThumb.Static.Border}"
                    StrokeThickness="1" UseLayoutRounding="True" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6" />
        <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FF181F29" />
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Fill="{TemplateBinding Background}"
                            RadiusX="4" RadiusY="4" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparentLeft" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="#FF80CBC4" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle
                            Width="{TemplateBinding Width}"
                            Height="8"
                            Fill="{TemplateBinding Background}"
                            RadiusX="4" RadiusY="4" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <Grid
                Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"
                UseLayoutRounding="True">
                <Rectangle
                    x:Name="grip" Width="20" Height="20"
                    Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                    Fill="#FF80CBC4" RadiusX="10" RadiusY="10"
                    Stroke="{StaticResource SliderThumb.Static.Border}"
                    StrokeThickness="0" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="grip" Property="StrokeThickness" Value="2" />
                    <Setter TargetName="grip" Property="Stroke" Value="Black" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            <Border
                x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TickBar
                        x:Name="TopTick" Grid.Row="0" Height="4"
                        Margin="0,0,0,2"
                        Fill="{TemplateBinding Foreground}"
                        Placement="Top" Visibility="Collapsed" />
                    <TickBar
                        x:Name="BottomTick" Grid.Row="2" Height="4"
                        Margin="0,2,0,0"
                        Fill="{TemplateBinding Foreground}"
                        Placement="Bottom" Visibility="Collapsed" />
                    <Border
                        x:Name="TrackBackground" Grid.Row="1" Height="8.0"
                        Margin="5,0" VerticalAlignment="center" Background="#3f4d62"
                        BorderBrush="{StaticResource SliderThumb.Track.Border}"
                        BorderThickness="1" CornerRadius="4">
                        <Canvas>
                            <Rectangle
                                x:Name="PART_SelectionRange" Height="8.0"
                                Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                Visibility="Hidden" />
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton
                                Margin="0,0,-3,0" BorderThickness="0"
                                Command="{x:Static Slider.DecreaseLarge}"
                                Style="{StaticResource RepeatButtonTransparentLeft}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb
                                x:Name="Thumb" Width="20" Height="20"
                                VerticalAlignment="Center" Focusable="False" OverridesDefaultStyle="True"
                                Template="{StaticResource SliderThumbHorizontalDefault}" />
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbHorizontalTop}" />
                    <Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbHorizontalBottom}" />
                    <Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">

            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                <Border CornerRadius="4" />
                <Path
                    x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z"
                    Fill="{StaticResource SliderThumb.Static.Background}"
                    Stretch="Fill"
                    Stroke="{StaticResource SliderThumb.Static.Border}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                <Path
                    x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z"
                    Fill="{StaticResource SliderThumb.Static.Background}"
                    Stretch="Fill"
                    Stroke="{StaticResource SliderThumb.Static.Border}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                <Path
                    x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z"
                    Fill="{StaticResource SliderThumb.Static.Background}"
                    Stretch="Fill"
                    Stroke="{StaticResource SliderThumb.Static.Border}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
            <Border
                x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TickBar
                        x:Name="TopTick" Grid.Column="0" Width="4"
                        Margin="0,0,2,0"
                        Fill="{TemplateBinding Foreground}"
                        Placement="Left" Visibility="Collapsed" />
                    <TickBar
                        x:Name="BottomTick" Grid.Column="2" Width="4"
                        Margin="2,0,0,0"
                        Fill="{TemplateBinding Foreground}"
                        Placement="Right" Visibility="Collapsed" />
                    <Border
                        x:Name="TrackBackground" Grid.Column="1" Width="4.0"
                        Margin="0,5" HorizontalAlignment="center"
                        Background="{StaticResource SliderThumb.Track.Background}"
                        BorderBrush="{StaticResource SliderThumb.Track.Border}"
                        BorderThickness="1">
                        <Canvas Margin="0,0">
                            <Rectangle
                                x:Name="PART_SelectionRange" Width="4.0"
                                Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                Visibility="Hidden" />
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb
                                x:Name="Thumb" Width="18" Height="11"
                                VerticalAlignment="Top" Focusable="False" OverridesDefaultStyle="True"
                                Template="{StaticResource SliderThumbVerticalDefault}" />
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbVerticalLeft}" />
                    <Setter TargetName="TrackBackground" Property="Margin" Value="2,5,0,5" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbVerticalRight}" />
                    <Setter TargetName="TrackBackground" Property="Margin" Value="0,5,2,5" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}" />
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource SliderVertical}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ThemeBackgroundColor" Color="#FF1E244A" />

        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="{StaticResource ThemeBackgroundColor}" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid
                            x:Name="templateRoot"
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <TextBlock
                                x:Name="txt" HorizontalAlignment="Center" VerticalAlignment="Center"
                                FontSize="20"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Header}"
                                TextTrimming="CharacterEllipsis"
                                ToolTip="{TemplateBinding Header}"
                                Visibility="Visible" />
                            <ContentControl>
                                <ContentControl.Template>
                                    <ControlTemplate>
                                        <!--  定义视觉树  -->
                                        <Grid Name="TabCoverGrid" Background="Transparent" />
                                        <!--  定义视觉树_end  -->
                                        <!--  定义触发器  -->
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="Hand" />
                                                <Setter TargetName="TabCoverGrid" Property="Opacity" Value="0.3" />
                                                <Setter TargetName="TabCoverGrid" Property="Background" Value="{StaticResource ThemeBackgroundColor}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                        <!--  定义触发器_End  -->
                                    </ControlTemplate>
                                </ContentControl.Template>
                            </ContentControl>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>

                                <!--<Setter Property="Foreground" TargetName="txt" Value="lime"/>-->
                                <!--<Setter Property="FontSize" TargetName="txt" Value="17"/>-->
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="txt" Property="Foreground" Value="#FF4BCFDA" />
                                <Setter TargetName="txt" Property="FontWeight" Value="Bold" />
                            </MultiDataTrigger>

                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="txt" Value="#FF75F4FF"/>
                                <Setter Property="Background" TargetName="templateRoot" Value="Red"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="#FF1E244A" />
            <Setter Property="BorderBrush" Value="#FFACACAC" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid
                            x:Name="templateRoot" ClipToBounds="True" KeyboardNavigation.TabNavigation="Local"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <UniformGrid
                                x:Name="HeaderPanel" Grid.Row="0" Grid.Column="0"
                                Margin="0" Panel.ZIndex="1" Background="Transparent"
                                IsItemsHost="True" KeyboardNavigation.TabIndex="1" Rows="1" />
                            <Line
                                Margin="0,0,0,1" VerticalAlignment="Bottom" SnapsToDevicePixels="True"
                                Stroke="White" StrokeThickness="0.1" X1="0"
                                X2="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
                            <Border
                                x:Name="ContentPanel" Grid.Row="1" Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter
                                    x:Name="PART_SelectedContentHost" Margin="0"
                                    Content="{TemplateBinding SelectedContent}"
                                    ContentSource="SelectedContent"
                                    ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                    ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="1" Background="Azure">
            <!--<Frame x:Name="Reportframe" Margin="0" Visibility="Visible" NavigationUIVisibility="Hidden"/>-->
            <Frame
                x:Name="Ultrasoundframe" Margin="0" NavigationUIVisibility="Hidden"
                Visibility="Visible" />
            <Image x:Name="ssaa" HorizontalAlignment="Left" Height="480" Margin="464,149,0,0" VerticalAlignment="Top" Width="536"/>
        </Grid>
        <StackPanel
            x:Name="NavigationStackPanel" Grid.Row="0" Grid.Column="1"
            Height="{Binding ElementName=ReportTabItem, Path=ActualHeight}"
            HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="Blue"
            FlowDirection="RightToLeft" Orientation="Horizontal">
            <Button
                x:Name="CloseButton" Margin="0" HorizontalAlignment="Center"
                Background="Transparent" BorderThickness="0" Click="CloseButton_Click"
                Style="{StaticResource CloseButtonStyle}">
                <!--<Image HorizontalAlignment="Center" Margin="4" Source="Resources/Close.png"/>-->
                <Viewbox Margin="4">
                    <Canvas
                        Canvas.Left="0" Canvas.Top="0" Width="18"
                        Height="18" Margin="2">
                        <Path
                            Canvas.Left="0" Canvas.Top="0" Width="18"
                            Height="18" Data="F1 M 1,0.999969L 46,45.5" Stretch="Fill"
                            Stroke="White" StrokeEndLineCap="Round" StrokeLineJoin="Round"
                            StrokeStartLineCap="Round" StrokeThickness="1" />
                        <Path
                            Canvas.Left="0" Canvas.Top="0" Width="18"
                            Height="18" Data="F1 M 45.25,1.49997L 1.87482,44.8752" Stretch="Fill"
                            Stroke="White" StrokeEndLineCap="Round" StrokeLineJoin="Round"
                            StrokeStartLineCap="Round" StrokeThickness="1" />
                    </Canvas>
                </Viewbox>
            </Button>
            <Button
                x:Name="MinimizeButton" Margin="0" HorizontalAlignment="Center"
                Background="Transparent" BorderThickness="0" Click="MinimizeButton_Click"
                Focusable="False"
                Style="{StaticResource MinsizeButtonStyle}">
                <Image Margin="4" HorizontalAlignment="Right" Source="Resources/Minsize.png" />
            </Button>
        </StackPanel>
        <StackPanel
            Grid.Row="0" Height="AUTO" Margin="0,0,0,0"
            HorizontalAlignment="Left" VerticalAlignment="Top" Background="Blue"
            FlowDirection="LeftToRight" Orientation="Horizontal">
            <Image
                Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center"
                Source="Resources/logo1024@1x.png" />
            <Label VerticalAlignment="Center" Content="WirelessUSG" Foreground="#fffefefe" />
        </StackPanel>


    </Grid>

</Page>
